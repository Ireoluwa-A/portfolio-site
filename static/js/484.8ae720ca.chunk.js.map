{"version":3,"file":"static/js/484.8ae720ca.chunk.js","mappings":"qNAsDA,EA7CmB,SAACA,GAChB,IAAMC,EAAOD,EAAMC,KAEnB,GAAmDC,EAAAA,EAAAA,IAAU,CACzDC,UAAW,GACXC,aAAa,IAFLC,EAAZ,EAAOC,IAAsBC,EAA7B,EAAqBC,OAArB,EAA0CC,MAK1C,OACI,iBAAKH,IAAKD,EACNK,UAAS,+CACPH,EAAc,iBAAmB,IAFvC,WAII,gBAAKG,UAAS,UAAKT,EAAKU,UAAV,mCAA8CV,EAAKW,eAEjE,iBAAKF,UAAS,+BAA0BT,EAAKY,gBAA7C,WACI,eAAIH,UAAU,0BAAd,SAAyCT,EAAKa,SAC9C,gBAAKJ,UAAU,iBAAf,UACI,cAAGA,UAAU,cAAb,SACKT,EAAKc,iBAGd,eAAIL,UAAU,uCAAd,SACKT,EAAKe,WAAWC,KAAI,SAACC,EAAKC,GACvB,OACI,wBAAiBD,EAAKE,MAAbD,EAEhB,OAEL,gBAAKT,UAAS,wBAAmBT,EAAKoB,SAAtC,UACI,cAAGC,OAAO,SAASC,KAAMtB,EAAKuB,KAA9B,UACI,SAAC,MAAD,CAAUd,UAAU,8BAMhC,gBAAKA,UAAS,UAAKT,EAAKwB,WAAV,mCAA+CxB,EAAKW,gBAM7E,E,+qDCTD,G,QA/BiB,YACIc,EAAAA,EAAAA,MAAjB,IAEA,GAAkExB,EAAAA,EAAAA,IAAU,CACxEC,UAAW,GACXC,aAAa,IAFLuB,EAAZ,EAAOrB,IAA4BsB,EAAnC,EAA2BpB,OAA3B,EAAyDC,MAKzD,OACI,qBAASoB,GAAG,WAAWT,KAAK,WAAWV,UAAU,qBAAjD,WAEI,iBAAKJ,IAAKqB,EACNjB,UAAS,oEACKkB,EAAuB,iBAAmB,IAF5D,WAGI,eAAIlB,UAAU,kDAAd,iBACA,eAAIA,UAAU,kDAAd,uBACA,gBAAKA,UAAU,gBAKnB,gBAAKA,UAAU,gBAAf,SACKoB,EAAAA,KAAiB,SAAC7B,EAAKkB,GACpB,OACI,SAAC,EAAD,CAAwBlB,KAAMA,GAAbkB,EACnB,QAKrB,E","sources":["pages/main/projectbox.jsx","pages/main/projects.jsx"],"sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport {useInView} from 'react-intersection-observer';\n\n// import \"../styles/general.css\";\nimport \"../../styles/projects.css\";\n\nimport {FaGithub} from 'react-icons/fa';\n\n\nconst ProjectBox = (props) => {\n    const proj = props.proj;\n\n    const {ref: projRef, inView: projVisible, entry} = useInView({\n        threshold: 0.4,\n        triggerOnce: true\n    })\n\n    return (\n        <div ref={projRef} \n            className={`projects_box fade_in_up\n            ${projVisible ? 'fade_in_appear' : ''}`}\n        >\n            <div className={`${proj.imageLeft} projects_image proj_bg ${proj.background}`}></div>\n\n            <div className={`projects_description ${proj.descriptionPos}`}>\n                <h1 className='font-bold font-WorkSans'>{proj.title}</h1>\n                <div className='projects_blurb'>\n                    <p className='font-Nunito'>\n                        {proj.description}\n                    </p>\n                </div>\n                <ul className='projects_tech font-Nunito text-white'>\n                    {proj.technology.map((item,index)=>{\n                        return(\n                            <li key={index}>{item.name}</li>\n                        )\n                    })}\n                </ul>\n                <div className={`projects_link ${proj.linkPos}`}>\n                    <a target=\"_blank\" href={proj.link}>\n                        <FaGithub className='w-[18px] h-[18px]'></FaGithub>\n                    </a>\n                </div>\n                \n            </div>\n\n            <div className={`${proj.imageRight} projects_image proj_bg ${proj.background}`}>\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ProjectBox","import React, {useRef, useEffect, useState} from 'react'\nimport {useInView} from 'react-intersection-observer';\nimport {useScrollLocation}  from '../../utils/helper';\n\nimport ProjectBox from './projectbox';\nimport projectsInfo from '../../projectsInfo.json';\n\n\nimport \"../../styles/general.css\";\nimport \"../../styles/projects.css\";\n\n\nconst Projects = () => {\n    const location = useScrollLocation()\n\n    const {ref: projectHeader, inView: projectHeaderVisible, entry} = useInView({\n        threshold: 0.4,\n        triggerOnce: true\n    })\n    \n    return (\n        <section id='projects' name='projects' className='projects_container'>\n            {/* Title */}\n            <div ref={projectHeader} \n                className={`projects_header fade_in_left\n                            ${projectHeaderVisible ? 'fade_in_appear' : ''}`} >\n                <h1 className='text-3xl tracking-wider font-bold font-WorkSans'>MY</h1>\n                <h1 className='text-4xl tracking-wider font-bold font-WorkSans'>PROJECTS</h1>\n                <div className='divider'></div>\n            </div>\n\n            {/* All projects */}\n            {/* <ProjectBox proj={projBoxes[0]}/> */}\n            <div className='projects_body'>\n                {projectsInfo.map((proj,index)=>{\n                    return(\n                        <ProjectBox key={index} proj={proj} />\n                    )})\n                }\n            </div>\n        </section>\n    )\n}\nexport default Projects\n"],"names":["props","proj","useInView","threshold","triggerOnce","projRef","ref","projVisible","inView","entry","className","imageLeft","background","descriptionPos","title","description","technology","map","item","index","name","linkPos","target","href","link","imageRight","useScrollLocation","projectHeader","projectHeaderVisible","id","projectsInfo"],"sourceRoot":""}